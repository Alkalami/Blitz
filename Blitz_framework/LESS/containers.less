/* Containers — Wrappers */

.wrap-100 {
  width: auto;              /* defaults to 100% but takes borders into account = big win since we can’t rely on box-sizing */
  margin: @base-margin 0;
}

.wrap-90 {
  width: 90%;
  margin: @base-margin 5%;  /* Since we can’t use auto (0 in legacy RMSDK), we must center using % */
}

.wrap-80 {
  width: 80%;               /* width: 80% -> KF8 bug, see amzn-kf8 query for fix */
  margin: @base-margin 10%;
}

.wrap-70 {
  width: 70%;
  margin: @base-margin 15%;
}

.wrap-60 {
  width: 60%;
  margin: @base-margin 20%;
}

.wrap-50 {
  width: 50%;
  margin: @base-margin 25%;
}

.wrap-40 {
  width: 40%;
  margin: @base-margin 30%;
}

.wrap-30 {
  width: 30%;
  margin: @base-margin 35%;
}

.wrap-20 {
  width: 20%;
  margin: @base-margin 40%;
}

.wrap-10 {
  width: 10%;
  margin: @base-margin 45%;
}

/* Widths */

.w-100 {
  width: 100%;
}

.w-90 {
  width: 90%;
}

.w-80 {
  width: 80%; 
}

.w-70 {
  width: 70%;
}

.w-60 {
  width: 60%;
}

.w-50 {
  width: 50%;
}

.w-40 {
  width: 40%;
}

.w-30 {
  width: 30%;
}

.w-20 {
  width: 20%;
}

.w-10 {
  width: 10%;
}

/* Heights */

.h-100 {
  height: 99.8%; 		/* 99.8% cos’ legacy RMSDK applies blank page after if 100% */
  max-height: 99vh;		/* iBooks sets 95vh for img */
}

.h-90 {
  height: 90%;
  max-height: 90vh;     /* We are using max-height so that legacy RMSDK takes % height into account. It won’t fallback to % if height in vh */
}

.h-80 {
  height: 80%;
  max-height: 80vh;
}

.h-70 {
  height: 70%;
  max-height: 70vh;
}

.h-60 {
  height: 60%;
  max-height: 60vh;
}

.h-50 {
  height: 50%;
  max-height: 50vh;
}

.h-40 {
  height: 40%;
  max-height: 40vh;
}

.h-30 {
  height: 30%;
  max-height: 30vh;
}

.h-20 {
  height: 20%;
  max-height: 20vh;    
}

.h-10 {
  height: 10%;
  max-height: 10vh;   
}

/* Floats */
/* If there are too many floating elements in a XHTML file, 
performance of legacy RMSDK takes a huge hit (± 4 seconds to 
render page on eInk devices)                                    */

.float-left {
  float: left;
  margin: 0 1.5% 0 0;
}

.float-right {
  float: right;
  margin: 0 0 0 1.5%;
}